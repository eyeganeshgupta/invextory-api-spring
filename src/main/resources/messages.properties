# Validation Messages
name.required=Name is required
name.too.long=Name must not exceed 100 characters
email.required=Email is required
email.invalid=Email should be valid
email.too.long=Email must not exceed 100 characters
password.required=Password is required
password.length=Password must be between 8 and 100 characters
password.complexity=Password must include at least one uppercase letter, one lowercase letter, one number, and one special character.
phone.invalid=Phone number should be valid and contain only digits
role.required=User role is required

# Category Validation Messages
category.name.required=Category name is required
category.name.too.long=Category name must not exceed 100 characters

# Supplier Validation Messages
supplier.name.required=Supplier name is required
supplier.name.too.long=Supplier name must not exceed 100 characters
supplier.contact.too.long=Contact information must not exceed 150 characters
supplier.address.too.long=Address must not exceed 255 characters

# Product Validation Messages
product.name.required=Product name is required
product.name.too.long=Product name must not exceed 100 characters
product.sku.required=Product SKU is required
product.sku.too.long=Product SKU must not exceed 50 characters
product.description.too.long=Description must not exceed 255 characters
product.image.url.too.long=Image URL must not exceed 255 characters
product.category.required=Product category is required

# Transaction Validation Messages
transaction.total.products.required=Total products must be specified.
transaction.total.price.required=Total price must be specified.
transaction.type.required=Transaction type must be specified.
transaction.status.required=Transaction status must be specified.
transaction.description.too.long=Description must not exceed 255 characters.
transaction.note.too.long=Note must not exceed 255 characters.

# Batch Validation Messages
batch.number.required=Batch number is required.
batch.number.too.long=Batch number cannot be more than 50 characters.
stock.quantity.required=Stock quantity is required.
stock.quantity.negative=Stock quantity cannot be negative.
mrp.required=Maximum Retail Price (MRP) is required.
mrp.positive=MRP must be a positive value.
purchase.price.required=Purchase price is required.
purchase.price.positive=Purchase price must be a positive value.
discount.invalid=Discount must be a valid non-negative value.
gst.required=GST rate is required.
gst.invalid=GST rate must be a non-negative value.
selling.price.required=Selling price is required.
selling.price.positive=Selling price must be a positive value.

# Miscellaneous Validation Messages
product.id.required=Product ID is required
supplier.id.required=Supplier ID is required
user.id.required=User ID is required

login.email.required=Email is required for login.
login.password.required=Password is required for login.

product.batch.id.required=Product batch ID is required.
transaction.quantity.required=Transaction quantity is required.
transaction.quantity.positive=Transaction quantity must be at least 1.

# Logging Messages
log.register.init=Initiating registration process for user with email: {}
log.role.provided=User role specified as: {}
log.role.default=No user role specified. Assigning default role: MANAGER.
log.user.save=Persisting new user record to the database for email: {}
log.register.success=User registration completed successfully for email: {}
user.registration.success=User has been registered successfully.

# Login-related messages
log.login.init=Initiating login process for user with email: {}
log.user.not.found=No user found with the provided email: {}
log.invalid.password=Password mismatch for user with email: {}
log.login.success=User logged in successfully with email: {}
user.login.success.message=User has been successfully authenticated and logged in.

# Error Messages
error.email.not.found=Email not found in the system.
error.password.mismatch=The provided password does not match our records.

# JWT Token related
jwt.token.expiration=6 months
jwt.login.success=Token generated and login successful for user with email: {}

# Get All Users
log.get.all.users.init=Fetching all users from the database.
log.users.retrieved=Successfully retrieved {0} users from the database.
users.fetch.success.message=The users have been successfully fetched.
